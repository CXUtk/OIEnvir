#include <cstring>
#include <cmath>
#include <cstdio>
#include <vector>
#include <queue>
#include <algorithm>
#include <_map>
#include <set>
#include <iostream>

using namespace std;

typedef long long ll;

const int INF = 2147483647;
const ll INF64 = 1e18;
const double EPS = 1e-15;
const double PI = 3.1415926;
const ll MOD = 1e9 + 7;

#define scd(x) scanf("%d", &(x))
#define scd2(x, y) scanf("%d %d", &(x), &(y))
#define prd(x) printf("%d", (x));

pair<double, double> pos[1005];
bool cmp(pair<double, double>& a, pair<double, double>& b){
	if(a.second != b.second){
		return a.second < b.second;
	}
	return a.first < b.first;
}
int main() {
	int n;
	int d;
	int c = 1;
	while(scanf("%d %d", &n, &d)){
		if(!n && !d)
			break;
		bool fail = false;
		for(int i = 0; i < n; i++) {
			int x, y;
			scanf("%d %d", &x, &y);
			if(fail)
				continue;
			if(y > d){
				fail = true;
				continue;
			}
			double offset = sqrt(1.0*d * d - 1.0*y * y);
			pos[i].first = x - offset;
			pos[i].second = x + offset;
		}
		if(fail){
			printf("Case %d: %d\n", c++, -1);
			continue;
		}
		sort(pos, pos + n, cmp);
		int ans = 1;
		double curr = pos[0].second;
		for(int i = 1; i < n; i++){
			if(pos[i].first > curr){
				ans++;
				curr = pos[i].second;
			}
		}
		printf("Case %d: %d\n", c++, ans);
	}

	return 0;
}
/*
3 2
1 3
-3 1
2 1

1 2
0 2

0 0
*/